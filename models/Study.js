/* Example Study
–––––––––––––––––––––––––––––––––––––––––––––––––– */
// {
//   _id: "123abc123123123123123",
//   name: "magland_synth_noise10_K20_C4",
//   studySet: "magland_synth",
//   description: "# Synthetic groundtruth generated by spikeforest\n- Data generated by James Jun on Oct 19, 2018\n- code is available on Github\n  - run `python gen_synth_datasets/8trode/driver.py`\n  - https://github.com/magland/spikeforest/tree/master/gen_synth_datasets/8trode\n  - commit#: eaf42d7a76dfd31b4150b752815d8efffdc51908\n- required packages\n  - spikeinterface: https://github.com/colehurwitz31/spikeinterface\n  - mountainlab_pytools: https://github.com/magland/mountainlab_pytools\n\n# Directory naming convension: datasets_noise#_K#_C#\n- noise#: noise value added (SD of white noise)\n- K#: number of units simulated\n- C#: number of electrodes (arranged linearly and separated by a 1 distance unit)\n\n\n",
//   sorters: [
//       "123abc123123123123124",
//       "123abc123123123123125",
//       "123abc123123123123126",
//       "123abc123123123123127"
//     ],
//   sorterNames: [
//     "IronClust-static",
//     "MountainSort4-thr3",
//     "SpykingCircus",
//     "Yass"
//   ]
// }

const mongoose = require("mongoose");
mongoose.Promise = global.Promise;

const studySchema = new mongoose.Schema({
  name: {
    type: String,
    required: "You must provide a name for the study."
  },
  studySet: {
    type: mongoose.Schema.ObjectId,
    ref: "StudySet"
  },
  sorterNames: {
    type: [String]
  },
  sorters: [{ type: mongoose.Schema.ObjectId, ref: "Sorter" }]
});

module.exports = mongoose.model("Study", studySchema);
