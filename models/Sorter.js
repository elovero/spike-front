/* Example Sorter
–––––––––––––––––––––––––––––––––––––––––––––––––– */
// Note: _id is the primary key generated by all MongoDB documents.
// The one below is a test key of approximately the same length.
// {
//   _id: "511bde3e3985283f25000004",
//   name: "MountainSort4-thr3",
//   processorName: "MountainSort4",
//   version: "4.1.0",
//   detectSign: -1,
//   adjacencyRadius: 50,
//   detectThreshold: 3
// }

const mongoose = require("mongoose");
mongoose.Promise = global.Promise;

const sorterSchema = new mongoose.Schema({
  name: {
    type: String,
    required: "You must provide a name for the sorter."
  },
  processorName: {
    type: String,
    required: "You must provide a processor name for the sorter."
  },
  version: {
    type: String,
    required: "You must provide a version for the sorter."
  },
  detectSign: {
    type: Number
    //   Is there a min/max for this?
  },
  adjacencyRadius: {
    type: Number
    //   Is there a min/max for this?
  },
  detectThreshold: {
    type: Number
    //   Is there a min/max for this?
  }
});

module.exports = mongoose.model("Sorter", sorterSchema);
